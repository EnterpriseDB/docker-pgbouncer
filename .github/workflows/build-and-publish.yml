name: Publish

on:
  push:
    tags:
      - v*
  workflow_dispatch:

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

env:
  IMAGE_STAGING: quay.io/enterprisedb/pgbouncer-testing
  IMAGE_RELEASE: quay.io/enterprisedb/pgbouncer

jobs:
  build-and-publish:
    runs-on: ubuntu-20.04
    steps:
      -
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          fetch-depth: 0
      -
        name: Detect platforms
        id: docker-platforms
        run: |
          # Available architecture on UBI8 are: linux/amd64, linux/arm64, linux/ppc64le, linux/s390x
          # Keep in mind that adding more platforms (architectures) will increase the building
          # time even if we use the ghcache for the building process.
          platforms="linux/amd64,linux/arm64,linux/ppc64le,linux/s390x"
          echo "::set-output name=platforms::${platforms}"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ steps.docker-platforms.outputs.platforms }}
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to quay.io
        uses: docker/login-action@v1.10.0
        with:
          registry: quay.io/enterprisedb
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      -
        name: Set image repository
        id: image-repo
        run: |
          if [[ "${GITHUB_REF}" =~ refs/tags/v(.*) ]]; then
            echo "::set-output name=images::${{ env.IMAGE_RELEASE }},${{ env.IMAGE_STAGING }}"
          else
            echo "::set-output name=images::${{ env.IMAGE_STAGING }}"
          fi
      -
        name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v3.5.0
        with:
          # list of Docker images to use as base name for tags
          images: "${{ steps.image-repo.outputs.images }}"
          # generate Docker tags based on the following events/attributes
          tags: |
            type=match,pattern=v(.*),group=1
            type=match,pattern=v(.*)-\d+,group=1
            type=ref,event=branch
      - 
        name: Build and push
        uses: docker/build-push-action@v2.7.0
        with:
          secrets: |
            "cs_script=${{ secrets.CS_SCRIPT }}"
          platforms: ${{ steps.docker-platforms.outputs.platforms }}
          context: .
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
